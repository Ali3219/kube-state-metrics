            - نام: محیط Setup Node.js
  موارد استفاده: actions/setup-node@v4.0.2
  با:
    # همیشه تأیید اعتبار را در npmrc تنظیم کنید.
    همیشه-auth: # اختیاری، پیش‌فرض نادرست است
    # مشخصات نسخه نسخه مورد استفاده. مثال‌ها: 12.x، 10.15.1، >=10.15.0.
    node-version: # اختیاری
    # فایل حاوی مشخصات نسخه نسخه مورد استفاده. مثال‌ها: package.json، .nvmrc، .node-version، .tool-versions.
    node-version-file: # اختیاری
    # معماری هدف برای استفاده Node. مثال: x86، x64. به طور پیش فرض از معماری سیستم استفاده می کند.
    معماری: # اختیاری
    # اگر می‌خواهید اکشن آخرین نسخه موجود را که مشخصات نسخه را برآورده می‌کند بررسی کند، این گزینه را تنظیم کنید.
    بررسی آخرین: # اختیاری
    # رجیستری اختیاری برای تنظیم برای احراز هویت. رجیستری را در یک فایل سطح پروژه .npmrc و yarnrc. تنظیم می کند و auth را برای خواندن از env.NODE_AUTH_TOKEN تنظیم می کند.
    registry-url: # اختیاری
    # محدوده اختیاری برای احراز هویت در برابر رجیستری های محدوده. هنگام استفاده از رجیستری بسته های GitHub (https://npm.pkg.github.com/) به مالک مخزن باز می گردد.
    دامنه: # اختیاری
    # برای بیرون کشیدن توزیع های گره از نسخه های گره استفاده می شود. از آنجایی که یک پیش‌فرض وجود دارد، این معمولاً توسط کاربر ارائه نمی‌شود. هنگام اجرای این عمل در github.com، مقدار پیش فرض کافی است. هنگامی که در GHES اجرا می‌کنید، اگر با محدودیت نرخ مواجه هستید، می‌توانید یک نشانه دسترسی شخصی برای github.com ارسال کنید.
    نشانه: # اختیاری، پیش‌فرض ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # برای تعیین یک مدیر بسته برای ذخیره سازی در فهرست پیش فرض استفاده می شود. مقادیر پشتیبانی شده: npm، نخ، pnpm.
    حافظه پنهان: # اختیاری
    # برای تعیین مسیر فایل وابستگی استفاده می‌شود: package-lock.json، yarn.lock، و غیره.
    cache-dependency-path: # اختیاری
          name: continuous-integration

on:
  push:
    branches:
    - main
    - release*
    tags:
    - v1.*
    - v2.*
  pull_request:
    branches:
    - main
    - release*

permissions:
  contents: read

env:
  E2E_SETUP_KIND: yes
  E2E_SETUP_KUBECTL: yes
  SUDO: sudo
  GO_VERSION: "^1.21"
  GOLANGCI_LINT_VERSION: "v1.54.2"

jobs:
  ci-go-lint:
    name: ci-go-lint
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
      id: go

    - name: Setup environment
      run: |
        make install-tools

    - name: Lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin ${{ env.GOLANGCI_LINT_VERSION }}
        make lint

  ci-validate-manifests:
    name: ci-validate-manifests
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
      id: go

    - name: Setup environment
      run: |
        make install-tools

    - name: Validate generated manifests
      run: |
        make validate-manifests

  ci-validate-go-modules:
    name: ci-validate-go-modules
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
      id: go

    - name: Setup environment
      run: |
        make install-tools

    - name: Validate go modules
      run: |
        make validate-modules

  ci-validate-docs:
    name: ci-validate-docs
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
      id: go

    - name: Setup environment
      run: |
        make install-tools

    - name: Check that all metrics are documented and templates have no delta
      run: |
        make doccheck

  ci-unit-tests:
    name: ci-unit-tests
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
      id: go

    - name: Setup environment
      run: |
        make install-tools

    - name: Unit tests
      run: |
        make test-unit

  ci-rule-tests:
    name: ci-rule-tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Setup promtool
        run: |
          make install-promtool

      - name: Rule tests
        run: |
          PROMTOOL_CLI=./promtool make test-rules

  ci-benchmark-tests:
    name: ci-benchmark-tests
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
      id: go

    - name: Setup environment
      run: |
        make install-tools

    - name: Benchmark tests
      run: |
        make test-benchmark-compare

  ci-build-kube-state-metrics:
    name: ci-build-kube-state-metrics
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
      id: go

    - name: Setup environment
      run: |
        make install-tools

    - name: Build
      run: |
        make build

  ci-e2e-tests:
    name: ci-e2e-tests
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
      id: go

    - name: Setup environment
      run: |
        make install-tools

    - name: End-to-end tests
      run: |
        make e2e
